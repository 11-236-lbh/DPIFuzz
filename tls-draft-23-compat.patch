diff --git a/common.go b/common.go
index 0fdba60..bc34a88 100644
--- a/common.go
+++ b/common.go
@@ -6,7 +6,7 @@ import (
 )
 
 const (
-	supportedVersion  uint16 = 0x7f16 // draft-22
+	supportedVersion  uint16 = 0x7f17 // draft-23
 	tls12Version      uint16 = 0x0303
 	tls10Version      uint16 = 0x0301
 	dtls12WireVersion uint16 = 0xfefd
@@ -22,9 +22,10 @@ var (
 type RecordType byte
 
 const (
-	RecordTypeAlert           RecordType = 21
-	RecordTypeHandshake       RecordType = 22
-	RecordTypeApplicationData RecordType = 23
+	RecordTypeChangeCipherSpec RecordType = 20
+	RecordTypeAlert            RecordType = 21
+	RecordTypeHandshake        RecordType = 22
+	RecordTypeApplicationData  RecordType = 23
 )
 
 // enum {...} HandshakeType;
@@ -113,17 +114,18 @@ const (
 type ExtensionType uint16
 
 const (
-	ExtensionTypeServerName          ExtensionType = 0
-	ExtensionTypeSupportedGroups     ExtensionType = 10
-	ExtensionTypeSignatureAlgorithms ExtensionType = 13
-	ExtensionTypeALPN                ExtensionType = 16
-	ExtensionTypeKeyShare            ExtensionType = 40
-	ExtensionTypePreSharedKey        ExtensionType = 41
-	ExtensionTypeEarlyData           ExtensionType = 42
-	ExtensionTypeSupportedVersions   ExtensionType = 43
-	ExtensionTypeCookie              ExtensionType = 44
-	ExtensionTypePSKKeyExchangeModes ExtensionType = 45
-	ExtensionTypeTicketEarlyDataInfo ExtensionType = 46
+	ExtensionTypeServerName              ExtensionType = 0
+	ExtensionTypeSupportedGroups         ExtensionType = 10
+	ExtensionTypeSignatureAlgorithms     ExtensionType = 13
+	ExtensionTypeALPN                    ExtensionType = 16
+	ExtensionTypePreSharedKey            ExtensionType = 41
+	ExtensionTypeEarlyData               ExtensionType = 42
+	ExtensionTypeSupportedVersions       ExtensionType = 43
+	ExtensionTypeCookie                  ExtensionType = 44
+	ExtensionTypePSKKeyExchangeModes     ExtensionType = 45
+	ExtensionTypeTicketEarlyDataInfo     ExtensionType = 46
+	ExtensionTypeSignatureAlgorithmsCert ExtensionType = 50
+	ExtensionTypeKeyShare                ExtensionType = 51
 )
 
 // enum {...} NamedGroup
diff --git a/conn.go b/conn.go
index 0ce05b2..79f0301 100644
--- a/conn.go
+++ b/conn.go
@@ -276,6 +276,8 @@ type Conn struct {
 	hsCtx      HandshakeContext
 }
 
+func (conn *Conn) StateConnected() stateConnected {return conn.state}
+
 func NewConn(conn net.Conn, config *Config, isClient bool) *Conn {
 	c := &Conn{conn: conn, config: config, isClient: isClient}
 	if !config.UseDTLS {
@@ -377,6 +379,9 @@ func (c *Conn) consumeRecord() error {
 	case RecordTypeApplicationData:
 		c.readBuffer = append(c.readBuffer, pt.fragment...)
 		logf(logTypeIO, "extended buffer: [%d] %x", len(c.readBuffer), c.readBuffer)
+	case RecordTypeChangeCipherSpec:
+		// This record has the sole intent of making TLS 1.3 Handshake more like TLS 1.2 for middleboxes
+		// See https://tlswg.github.io/tls13-spec/draft-ietf-tls-tls13.html#middlebox
 	}
 
 	return err
diff --git a/handshake-layer.go b/handshake-layer.go
index 888c5f3..a3ef0fc 100644
--- a/handshake-layer.go
+++ b/handshake-layer.go
@@ -177,6 +177,10 @@ func (h *HandshakeLayer) readRecord() error {
 		return err
 	}
 
+	if pt.contentType == RecordTypeChangeCipherSpec {
+		return nil
+	}
+
 	if pt.contentType != RecordTypeHandshake &&
 		pt.contentType != RecordTypeAlert {
 		return fmt.Errorf("tls.handshakelayer: Unexpected record type %d", pt.contentType)
diff --git a/record-layer.go b/record-layer.go
index 761a868..dcf421e 100644
--- a/record-layer.go
+++ b/record-layer.go
@@ -299,6 +299,8 @@ func (r *RecordLayer) nextRecord() (*TLSPlaintext, error) {
 	switch RecordType(header[0]) {
 	default:
 		return nil, fmt.Errorf("tls.record: Unknown content type %02x", header[0])
+	case RecordTypeChangeCipherSpec:
+		return r.nextRecord()
 	case RecordTypeAlert, RecordTypeHandshake, RecordTypeApplicationData:
 		pt.contentType = RecordType(header[0])
 	}
@@ -319,7 +321,7 @@ func (r *RecordLayer) nextRecord() (*TLSPlaintext, error) {
 	copy(pt.fragment, body)
 
 	// Attempt to decrypt fragment
-	if cipher.cipher != nil {
+	if cipher.cipher != nil && pt.contentType != RecordTypeChangeCipherSpec {
 		seq := cipher.seq
 		if r.datagram {
 			seq = header[3:11]
diff --git a/state-machine.go b/state-machine.go
index 7639c5f..3d44bda 100644
--- a/state-machine.go
+++ b/state-machine.go
@@ -104,6 +104,8 @@ func (state stateConnected) State() State {
 	return StateServerConnected
 }
 
+func (state stateConnected) ExporterSecret() []byte {return state.exporterSecret}
+
 func (state *stateConnected) KeyUpdate(request KeyUpdateRequest) ([]HandshakeAction, Alert) {
 	var trafficKeys keySet
 	if state.isClient {
